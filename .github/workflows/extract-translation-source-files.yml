# This workflow extracts translation source files from code and adds the extracted
# translation source files to the openedx-translations repository via an auto-merged pull
# request.

name: Extract Translation Source Files

on:
  push:
#  workflow_dispatch:    # by request
#  schedule:
#    - cron: '0 0 * * *'  # every day at midnight

jobs:
  setup-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.dynamic_branch.outputs.branch }}
    steps:
    # sets the job output that creates a unique branch name
    - name: dynamically set branch job output variable
      id: dynamic_branch
      run: echo "branch=automated/extract-translation-source-files-$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_OUTPUT

    # clones the openedx-translations repo so a branch can be added in the next step
    - name: echo branch name
      id: date
      run: echo $BRANCH
    - name: clone openedx/openedx-translations
      uses: actions/checkout@v3

    # creates the branch where all the translations will be added to
    - name: make and push a new branch
      run: |
        git checkout -b ${{ steps.dynamic_branch.outputs.branch }}
        git push --set-upstream origin ${{ steps.dynamic_branch.outputs.branch }}

  edx-platform-translations:
    strategy:
      matrix:
        repo:
          - repo_name: edx-platform
    runs-on: ubuntu-latest
#    continue-on-error: true
    needs: [setup-branch]

    steps:
      # Clones the openedx-translations repo
      - name: clone openedx/openedx-translations
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.setup-branch.outputs.branch }}

      # Installs gettext, a dependency for extracting translation source files in django
      - name: install gettext
        run: sudo apt install -y gettext libxml2-dev libxmlsec1-dev libxslt1-dev

      # Clones the  repository
      - name: clone openedx/${{ matrix.repo.repo_name }}
        uses: actions/checkout@v3
        with:
          repository: openedx/${{ matrix.repo.repo_name }}
          path: translations/${{ matrix.repo.repo_name }}

      # Sets up Python
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Installs Python requirements
      - name: install requirements
        run: |
          pip install -r requirements/translations.txt
          pip install -r translations/${{ matrix.repo.repo_name }}/requirements/edx/base.txt

      # Extracts the translation source files
      - name: extract translation source files
        run: |
          cd translations/${{ matrix.repo.repo_name }}
          rm -rf conf/locale/en
          mkdir -p conf/locale/en/LC_MESSAGES
          make extract_translations

      # Validate compilation of translation source files
      - name: validate compilation of translation source files
        run: |
          cd translations/${{ matrix.repo.repo_name }}
          i18n_tool validate --verbose
          paver i18n_compilejs

      # git adds only the translation source files, found in conf/locale/en
      - name: git add the translation source files
        id: add-sources
        run: |
          # set identity
          git config --global user.email "translations-bot@openedx.org"
          git config --global user.name "edx-transifex-bot"
          # Change directory to translations/${{ matrix.repo.repo_name }}
          cd translations/${{ matrix.repo.repo_name }}
          # finds the directory containing the english locale usually located in
          # */*/conf/locale/en
          EN_DIR=$(find . -type d -regex ".+conf\/locale\/en$")
          # If the directory is not found, exit with an error. This can happen if we add a repository that doesn't
          # comply with OEP-58, or it still doesn't have any translations yet
          if [ -f "${EN_DIR}/LC_MESSAGES/mako.po" ]; then
            echo "Missing English locale directory for ${{ matrix.repo.repo_name }}!"
            echo "exiting with error!"
            exit 1
          fi
          # remove translations/${{ matrix.repo.repo_name }}/.git so we don't commit a submodule
          rm -rf .git
          git add -f -v $EN_DIR/*.po
          # Check the git statuses of the translation source files
          echo "GIT_STATUS=$(git status conf/locale/en -s | wc -l)" >> $GITHUB_ENV

      # Attempts to commit the translation source files if there is a difference
      - name: git commit the translation source files
        if: "${{ env.GIT_STATUS > 0 }}"
        run: |
          # commit the changes
          git commit -m "chore: add extracted translation source files from ${{ matrix.repo.repo_name }}"
          # push changes to branch
          git show
          git push
